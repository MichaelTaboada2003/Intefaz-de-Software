---
import Layout from "../layouts/Layout.astro";
import Movement from "../components/Movement.astro";
---

<script>

declare global {
  interface HTMLInputElement {
    lastValue?: string;
  }
}

const botones: (HTMLElement | null)[] = [
  document.getElementById("button1"),
  document.getElementById("button2"),
  document.getElementById("button3"),
];

// Función para manejar el clic en un botón
function activarBoton(this: HTMLElement): void {
  console.log("Botón activado");
  // Eliminar la clase "active" de todos los botones
  botones.forEach((boton: HTMLElement | null) => {
    boton?.classList.remove("active");
  });
  // Agregar la clase "active" al botón que se presionó
  this.classList.add("active");
}

// Agregar el evento clic a cada botón
botones.forEach((boton: HTMLElement | null) => {
  boton?.addEventListener("click", activarBoton);
});

// Función para cambiar el estado y mostrar el colapso correspondiente
function changeState(newState: number): void {
  const collapseElements: NodeListOf<HTMLElement> = document.querySelectorAll(".paymethod");

  // Ocultar todos los colapsos
  collapseElements.forEach((collapse: HTMLElement) => {
    collapse.classList.add("collapse");
  });

  // Mostrar el colapso correspondiente al nuevo estado
  switch (newState) {
    case 1:
      document.getElementById("collapseOne")?.classList.remove("collapse");
      break;
    case 2:
      document.getElementById("collapseTwo")?.classList.remove("collapse");
      break;
    case 3:
      document.getElementById("collapseThree")?.classList.remove("collapse");
      break;
  }
}

// Asignar manejadores de eventos a los botones
document.getElementById("button1")?.addEventListener("click", () => changeState(1));
document.getElementById("button2")?.addEventListener("click", () => changeState(2));
document.getElementById("button3")?.addEventListener("click", () => changeState(3));

(() => {
  "use strict";

  // Fetch all the forms we want to apply custom Bootstrap validation styles to
  const forms: NodeListOf<HTMLFormElement> = document.querySelectorAll(".needs-validation");

  // Loop over them and prevent submission
  Array.from(forms).forEach((form: HTMLFormElement) => {
    form.addEventListener(
      "submit",
      (event: Event) => {
        if (!form.checkValidity()) {
          event.preventDefault();
          event.stopPropagation();
        }

        form.classList.add("was-validated");
      },
      false
    );
  });
})();

// For Card Number formatted input
const cardNum: HTMLInputElement | null = document.getElementById("cr_no") as HTMLInputElement;
if (cardNum) {
  cardNum.onkeyup = handleCardNumKeyUp.bind(cardNum);
}

function handleCardNumKeyUp(this: HTMLInputElement, e: KeyboardEvent) {
  if (this.value === this.lastValue) return;
  let caretPosition = this.selectionStart ?? 0;
  const sanitizedValue = this.value.replace(/[^0-9]/gi, "");
  const parts: string[] = [];

  for (let i = 0, len = sanitizedValue.length; i < len; i += 4) {
    parts.push(sanitizedValue.substring(i, i + 4));
  }

  for (let i = caretPosition - 1; i >= 0; i--) {
    const c = this.value[i];
    if (c < "0" || c > "9") {
      caretPosition--;
    }
  }
  caretPosition += Math.floor(caretPosition / 4);

  this.value = this.lastValue = parts.join("-");
  this.selectionStart = this.selectionEnd = caretPosition;
}

// For Date formatted input
const expDate: HTMLInputElement | null = document.getElementById("exp") as HTMLInputElement;
if (expDate) {
  expDate.onkeyup = handleExpDateKeyUp.bind(expDate);
}

function handleExpDateKeyUp(this: HTMLInputElement, e: KeyboardEvent) {
  if (this.value === this.lastValue) return;
  let caretPosition = this.selectionStart ?? 0;
  const sanitizedValue = this.value.replace(/[^0-9]/gi, "");
  const parts: string[] = [];

  for (let i = 0, len = sanitizedValue.length; i < len; i += 2) {
    parts.push(sanitizedValue.substring(i, i + 2));
  }

  for (let i = caretPosition - 1; i >= 0; i--) {
    const c = this.value[i];
    if (c < "0" || c > "9") {
      caretPosition--;
    }
  }
  caretPosition += Math.floor(caretPosition / 2);

  this.value = this.lastValue = parts.join("/");
  this.selectionStart = this.selectionEnd = caretPosition;
};

  document.addEventListener('DOMContentLoaded', function() {
    const storedUsername = localStorage.getItem('username'); 
    const greetingElement = document.getElementById('userGreeting'); 

    if (storedUsername && greetingElement) { 
      greetingElement.textContent = `¡Hola!, ${storedUsername}`;
      greetingElement.classList.add('fade-in'); 
    } else {
      console.error('Greeting element or username not found');
    }
  });
</script>

<Layout title="User">
  <div class="d-flex">
    <div class="w-50">
      <h1 class="fw-bold" id="userGreeting"></h1>
      <div class="mt-5 me-4 d-flex justify-content-between px-4">
        <button
          type="button"
          id="button1"
          class="btn active method"
          style="background-color: white;  width: 30%;"
        >
          <div class="material-symbols-outlined" style="font-size: 50px;">
            credit_card
          </div>
          <div>Credit Card</div>
        </button>
        <button
          type="button"
          id="button2"
          class="btn"
          style="background-color: white;  width: 30%;"
        >
          <div class="material-symbols-outlined" style="font-size: 50px;">
            credit_card
          </div>
          <div>PayPal</div>
        </button>
        <button
          type="button"
          id="button3"
          class="btn"
          style="background-color: white; width: 30%;"
        >
          <div class="material-symbols-outlined" style="font-size: 50px;">
            credit_card
          </div>
          <div>PSE</div>
        </button>
      </div>
      <div class="p-5">
        <div id="collapseOne" class="paymethod">
          <div>
            <form class="g-3 needs-validation" novalidate>
              <!--  -->
              <div class="col-md-4 w-100 py-3">
                <label for="validationCustom01" class="form-label pay"
                  >Name on Card</label
                >
                <input
                  type="text"
                  class="form-control"
                  id="validationCustom01"
                  name="holdername"
                  placeholder="John Smith"
                  required
                />
                <div class="valid-feedback">Looks good!</div>
                <div class="invalid-feedback">Llena el campo</div>
              </div>

              <div class="col-md-4 w-100 py-3">
                <label for="cr_no" class="form-label">Card Number</label>
                <input
                  type="text"
                  class="form-control"
                  name="cardno"
                  id="cr_no"
                  placeholder="0000-0000-0000-0000"
                  minlength="19"
                  maxlength="19"
                  required
                />
                <div class="valid-feedback">Looks good!</div>
                <div class="invalid-feedback">Llena el campo</div>
              </div>
              <div class="row flex-fill py-3">
                <!--  -->
                <div class="col-md-4 flex-fill">
                  <label for="validationCustom03" class="form-label">CVV</label>
                  <input
                    type="password"
                    name="cvcpwd"
                    placeholder="●●●"
                    class="form-control placeicon"
                    minlength="3"
                    maxlength="3"
                    id="validationCustom03"
                    required
                  />
                  <div class="valid-feedback">Looks good!</div>
                  <div class="invalid-feedback">Llena el campo</div>
                </div>
                <div class="col-md-4 flex-fill">
                  <label for="exp" class="form-label">Expiration Date</label>
                  <input
                    type="text"
                    name="exp"
                    class="form-control"
                    id="exp"
                    placeholder="MM/YY"
                    minlength="5"
                    maxlength="5"
                    required
                  />
                  <div class="valid-feedback">Looks good!</div>
                  <div class="invalid-feedback">Llena el campo</div>
                </div>
              </div>
              <div class="py-3">
                <button class="btn btn-primary" type="submit"
                  >Submit form</button
                >
              </div>
            </form>
          </div>
        </div>
        <div id="collapseTwo" class="paymethod collapse">
          <div>
            <strong>This is the second item's accordion body.</strong> It is hidden
            by default, until the collapse plugin adds the appropriate classes that
            we use to style each element. These classes control the overall appearance,
            as well as the showing and hiding via CSS transitions. You can modify
            any of this with custom CSS or overriding our default variables. It's
            also worth noting that just about any HTML can go within the
            <code>.accordion-body</code>, though the transition does limit
            overflow.
          </div>
        </div>

        <div id="collapseThree" class="paymethod collapse">
          <div>
            <strong>This is the third item's accordion body.</strong> It is hidden
            by default, until the collapse plugin adds the appropriate classes that
            we use to style each element. These classes control the overall appearance,
            as well as the showing and hiding via CSS transitions. You can modify
            any of this with custom CSS or overriding our default variables. It's
            also worth noting that just about any HTML can go within the
            <code>.accordion-body</code>, though the transition does limit
            overflow.
          </div>
        </div>
      </div>
    </div>
    
    <div class="flex-fill pe-5 pt-3">
      <div class="d-flex align-items-center justify-content-start saldo-actual">
        <span class="fw-bold" style="font-size: 2.8vw;">SALDO ACTUAL:</span>
        <div class="saldo">
          <span class="monto" style="font-size: 4vw;">$10.000,00</span>
          <span class="moneda">COP</span>
        </div>
      </div>
       
      <span class="fw-bold movimientos-title" style="font-size: 2vw;">Últimos Movimientos</span>
      <div class="mt-2" style="overflow-y: auto; max-height: 79vh;">
        <Movement type="Recarga" amount="20.000" date="23/01/2024 : 08:50 AM" />
        <Movement type="Viaje" amount="3.000" date="23/01/2024 : 08:50 AM" />
        <Movement type="Viaje" amount="3.000" date="23/01/2024 : 08:50 AM" />
        <Movement type="Recarga" amount="6.000" date="23/01/2024 : 08:50 AM" />
        <Movement type="Viaje" amount="3.000" date="23/01/2024 : 08:50 AM" />
        <Movement type="Recarga" amount="3.000" date="23/01/2024 : 08:50 AM" />
        <Movement type="Recarga" amount="3.000" date="23/01/2024 : 08:50 AM" />
      </div>
    </div>
  </div>
</Layout>

<style>
  .collapse {
    display: none;
  }
  .active {
    transition: 76ms;
    transform: translateY(-0px);
    box-shadow: rgb(233, 126, 3) 0px 0px 8px -1px;
    background-color: #fff;
    color: #000000;
    border: solid 2px #f07000;
  }

  .btn {
    font-family: Roboto, sans-serif;
    font-weight: bolder;
    transform: translateY(0);
    align-items: center;
    cursor: pointer;
  }
  .saldo-actual {
  padding: 20px;
  background-color: #ffffff; 
  border-radius: 8px; 
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); 
  margin-top: 20px; 
}

.saldo {
  display: flex;
  align-items: baseline; 
  margin-left: 10px; 
}

.monto {
  font-weight: bold;
  color: #0d1a0e; 
  margin-right: 5px; 
}

.moneda {
  font-size: 2vw;
  color: #666666; 
}

.paymethod {
  padding: 10px; 
  background-color: #fff; 
  border-radius: 8px; 
  border: 1px solid #ccc; 
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1); 
}

.form-control {
  border-radius: 4px; 
  border: 1px solid #ccc; 
  padding: 6px 10px; 
}

.btn-primary {
  background-color: #0056b3; 
  border: none; 
  padding: 10px 20px; 
  border-radius: 4px; 
  color: white;
  font-weight: bold; 
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2); 
}

#userGreeting {
  font-size: 5vw; 
  color: #050708;
  text-shadow: 1px 1px 2px #bdc3c7; 
  margin-top: 20px; 
  padding: 10px 20px; 
  background-color: #ffffff;
  border-radius: 5px; 
  display: inline-block; 
  text-align: center; 
}

.movimientos-title {
  display: block; 
  margin-top: 20px; 
  margin-bottom: 20px; 
  font-weight: bold; 
}

@keyframes slideInRight {
  from {
    opacity: 0;
    transform: translateX(-50px); 
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

.fade-in {
  animation: slideInRight 1.5s ease-out forwards;
}


</style>
